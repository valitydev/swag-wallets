---
swagger: "2.0"
info:
  version: "0.1.0"
  title: Vality Wallet API
  description: >

    The Vality Wallet API is the base and only point of interaction with the wallet system. All system state changes are carried out by calling the corresponding API methods. Any third party applications, including our websites and other UIs, are external client applications.

    The Vality API works on top of the HTTP protocol. We use REST architecture, the scheme is described according to [OpenAPI 2.0](https://spec.openapis.org/oas/v2.0). Return codes are described by the corresponding HTTP statuses. The system accepts and returns JSON values in the body of requests and responses.

    ## Content Format

    Any API request must be encoded in UTF-8 and must contain JSON content.

    ```
      Content-Type: application/json; charset=utf-8
    ```

    ## Date format

    The system accepts and returns timestamp values in the `date-time` format described in [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339):

    ```
      2017-01-01T00:00:00Z
      2017-01-01T00:00:01+00:00
    ```

    ## Maximum request processing time

    In any API call, you can pass a timeout parameter in the `X-Request-Deadline` header of the corresponding request, which determines the maximum time to wait for the operation to complete on the request:

    ```
     X-Request-Deadline: 10s
    ```

    After the specified time has elapsed, the system stops processing the request. It is recommended to specify a value of no more than one minute, but no less than three seconds.

    `X-Request-Deadline` can:

    * set in `date-time` format according to [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339); 
    * specified in relative terms: in milliseconds (`150000ms`), seconds (`540s`) or minutes (`3.5m`).

    ## Request processing errors

    During the processing of requests by our system, various unforeseen situations may occur. The system signals about their appearance via the HTTP protocol with the corresponding [statuses][5xx], indicating server errors.

    |  Code    |  Description  |
    | ------- | -------------- |
    | **500** | An unexpected situation occurred while the system was processing the request. If you receive such a response code, we recommend that you contact technical support. |
    | **503** | The system is temporarily unavailable and not ready to serve this request. The request is guaranteed to fail, if you receive a response code like this, try to implement it later when the system is restored to availability. |
    | **504** | The system has exceeded the allowable request processing time, the result of the request is undefined. Try to resubmit the request or find out the result of the original request, if you do not want to re-execute the request. |

    [5xx]: https://tools.ietf.org/html/rfc7231#section-6.6
  termsOfService: "https://vality.dev/"
  contact:
    name: Technical support team
    email: support@vality.dev
    url: "https://api.vality.dev"
host: api.vality.dev
basePath: /wallet/v0
schemes:
  - https
consumes:
  - application/json; charset=utf-8
produces:
  - application/json; charset=utf-8
securityDefinitions:
  bearer:
    type: apiKey
    name: Authorization
    in: header
    description: >
      We use [JWT](https://jwt.io) for call authentication. The corresponding key is passed in the header.

      ```shell
       Authorization: Bearer {YOUR_API_KEY_JWT}
      ```

security:
  - bearer: []
responses:
  BadRequest:
    description: Invalid input data for operation
    schema:
      $ref: "#/definitions/BadRequest"
  ConflictRequest:
    description: The passed value `externalID` has already been used by you with other query parameters
    schema:
      $ref: "#/definitions/ConflictRequest"
  NotFound:
    description: The content you are looking for was not found
  Unauthorized:
    description: Authorization error
parameters:
  requestID:
    name: X-Request-ID
    in: header
    description: Unique identifier of the request to the system
    required: true
    type: string
    maxLength: 32
    minLength: 1
  providerID:
    name: providerID
    in: path
    description: Identifier of the provider
    required: true
    type: string
    maxLength: 40
    minLength: 1
  identityID:
    name: identityID
    in: path
    description: Identifier of the owner's identity
    required: true
    type: string
    maxLength: 40
    minLength: 1
  walletID:
    name: walletID
    in: path
    description: Identifier of the wallet
    required: true
    type: string
    maxLength: 40
    minLength: 1
  destinationID:
    name: destinationID
    in: path
    description: Identifier of the destination
    required: true
    type: string
    maxLength: 40
    minLength: 1
  withdrawalID:
    name: withdrawalID
    in: path
    description: Identifier of the withdrawal
    required: true
    type: string
    maxLength: 40
    minLength: 1
  externalID:
    name: externalID
    in: path
    description: External identifier
    required: true
    type: string
  residence:
    name: residence
    in: query
    description: |
      The residence within which the services are provided,
      [ISO 3166-1] country or region code (https://en.wikipedia.org/wiki/ISO_3166-1)
    type: string
    pattern: "^[A-Za-z]{3}$"
    required: false
  amountFrom:
    name: amountFrom
    in: query
    description: Amount of monetary funds in minor units
    type: integer
    format: int64
    required: false
  amountTo:
    name: amountTo
    in: query
    description: Amount of monetary funds in minor units
    type: integer
    format: int64
    required: false
  currencyID:
    name: currencyID
    in: query
    description: |
      Currency, character code according to [ISO
      4217](http://www.iso.org/iso/home/standards/currency_codes.htm).
    type: string
    pattern: "^[A-Z]{3}$"
  limit:
    name: limit
    in: query
    description: Selection limit
    required: true
    type: integer
    format: int32
    minimum: 1
    maximum: 1000
  eventCursor:
    name: eventCursor
    in: query
    description: |
      The identifier of the last known event.

      All events that occurred _after_ the specified one will be included in the selection.
      If this parameter is not specified, the selection will include events starting from the very first one.
    required: false
    type: integer
    format: int32
  eventID:
    name: eventID
    in: path
    description: |
      Identifier of the identification procedure event.
    required: true
    type: integer
    format: int32
  reportID:
    name: reportID
    in: path
    description: The report identifier
    required: true
    type: integer
    format: int64
  fileID:
    name: fileID
    in: path
    description: The file identifier
    required: true
    type: string
    maxLength: 40
    minLength: 1
  fromTime:
    name: fromTime
    in: query
    description: Start of the time period
    required: true
    type: string
    format: date-time
  toTime:
    name: toTime
    in: query
    description: End of the time period
    required: true
    type: string
    format: date-time
  deadline:
    name: X-Request-Deadline
    in: header
    description: Maximum request processing time
    required: false
    type: string
    maxLength: 40
    minLength: 1
  webhookID:
    name: webhookID
    in: path
    description: Webhook identifier
    required: true
    type: string
    maxLength: 40
    minLength: 1
  queryIdentityID:
    name: identityID
    in: query
    description: Identifier of the owner's identity
    required: true
    type: string
    maxLength: 40
    minLength: 1
  w2wTransferID:
    name: w2wTransferID
    in: path
    description: Identifier of transfer
    required: true
    type: string
    maxLength: 40
    minLength: 1
tags:
  - name: Providers
    x-displayName: Service providers
    description: ""
  - name: Identities
    x-displayName: Identities
    description: ""
  - name: Wallets
    x-displayName: Wallets
    description: ""
  - name: Deposits
    x-displayName: Deposits
    description: ""
  - name: Withdrawals
    x-displayName: Withdrawals
    description: ""
  - name: Residences
    x-displayName: Residences
    description: ""
  - name: Currencies
    x-displayName: Currencies
    description: ""
  - name: Reports
    x-displayName: Reports
    description: ""
  - name: Downloads
    x-displayName: File upload
    description: ""
  - name: W2W
    x-displayName: Transfers within the system
    description: "Transfers of funds between wallets within the system"
  - name: Webhooks
    x-displayName: Webhooks
    description: >
      ## Vality Webhooks Management API

      This section describes methods that allow you to manage Webhooks, or tools for receiving asynchronous notifications via HTTP requests when one or a group of events of interest to you occurs, for example, that a withdrawal within the created wallet was successfully completed.

      ## Vality Webhooks Events API

      Attention! Only the Webhooks Management API is part of the Vality system and hence this specification. To implement the notification handler, you will need to read the OpenAPI specification [Vality Wallets Webhook Events API](https://vality.github.io/swag-wallets-webhook-events/).
  - name: Error Codes
    x-displayName: Error codes
    description: >

      ## Withdrawal errors

      | Code                   | Description                                                                                                                                                                                         |
      | ---------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
      | InvalidSenderResource  | Invalid transfer source (entered the number of a non-existent card, missing account, etc.)                                                                                                          |
      | InvalidReceiverResource| Wrong transfer receiver (invalid card number entered, etc.)                                                                                                                                         |
      | InsufficientFunds      | Insufficient funds on the bank card account                                                                                                                                                         |
      | PreauthorizationFailed | Pre-Authorization Rejected (Wrong 3D-Secure Code Entered, Cancel Link Clicked on 3D-Secure Form)                                                                                                    |
      | RejectedByIssuer       | The transfer was rejected by the issuer (prohibitions were established by the country of debiting, a ban on purchases on the Internet, the withdrawal was rejected by the issuer's antifraud, etc.) |
